/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as userProductsRouteImport } from './routes/(user)/products'
import { Route as userProductsProductIdRouteImport } from './routes/(user)/products.$productId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const userProductsRoute = userProductsRouteImport.update({
  id: '/(user)/products',
  path: '/products',
  getParentRoute: () => rootRouteImport,
} as any)
const userProductsProductIdRoute = userProductsProductIdRouteImport.update({
  id: '/$productId',
  path: '/$productId',
  getParentRoute: () => userProductsRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/products': typeof userProductsRouteWithChildren
  '/products/$productId': typeof userProductsProductIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/products': typeof userProductsRouteWithChildren
  '/products/$productId': typeof userProductsProductIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(user)/products': typeof userProductsRouteWithChildren
  '/(user)/products/$productId': typeof userProductsProductIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/products' | '/products/$productId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/products' | '/products/$productId'
  id: '__root__' | '/' | '/(user)/products' | '/(user)/products/$productId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  userProductsRoute: typeof userProductsRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(user)/products': {
      id: '/(user)/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof userProductsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(user)/products/$productId': {
      id: '/(user)/products/$productId'
      path: '/$productId'
      fullPath: '/products/$productId'
      preLoaderRoute: typeof userProductsProductIdRouteImport
      parentRoute: typeof userProductsRoute
    }
  }
}

interface userProductsRouteChildren {
  userProductsProductIdRoute: typeof userProductsProductIdRoute
}

const userProductsRouteChildren: userProductsRouteChildren = {
  userProductsProductIdRoute: userProductsProductIdRoute,
}

const userProductsRouteWithChildren = userProductsRoute._addFileChildren(
  userProductsRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  userProductsRoute: userProductsRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
